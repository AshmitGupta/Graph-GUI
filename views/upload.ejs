<!-- upload.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>XML File Upload</title>
    <style>
        /* Styles */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(to right, #6a11cb, #2575fc);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden; /* Prevent scrollbars */
            margin: 0;
        }

        /* Main container to hold the upload form and status message */
        .main-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            width: 500px;
            max-height: 90vh;
            overflow: hidden;
            padding: 30px;
            box-sizing: border-box;
        }

        .main-container h1 {
            margin-top: 0;
        }

        .file-input {
            display: none;
        }

        .upload-area {
            border: 2px dashed #007BFF;
            padding: 30px;
            border-radius: 10px;
            transition: background-color 0.3s;
            cursor: pointer;
            width: 100%;
            text-align: center;
            margin-bottom: 20px;
        }

        .upload-area.dragging {
            background-color: #e2f2ff;
        }

        .upload-area p {
            margin: 0;
            color: #555;
        }

        .file-name {
            margin-top: 10px;
            color: #007BFF;
            font-weight: bold;
            word-wrap: break-word;
        }

        .submit-btn {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .submit-btn:hover {
            background-color: #218838;
        }

        .flash-message {
            margin-top: 20px;
            color: #28a745;
        }

        .status-message {
            margin-top: 20px;
            color: #555;
            font-weight: bold;
        }

        /* Registration input field styles */
        .input-field {
            margin-top: 20px;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            width: 100%;
        }

        .input-field label {
            margin-bottom: 5px;
            color: #555;
        }

        .input-field input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .input-field input:focus {
            outline: none;
            border-color: #007BFF;
        }
    </style>
</head>
<body>
    <div class="main-container">
        <h1>Upload your XML File</h1>
        <% if (typeof msg !== 'undefined') { %>
            <p class="flash-message"><%= msg %></p>
        <% } %>
        <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
            <input type="file" name="file" id="fileInput" class="file-input" accept=".xml">
            <div class="upload-area" id="uploadArea">
                <p>Drag & drop your file here or click to browse</p>
            </div>
            <div id="fileName" class="file-name"></div>

            <!-- Registration Input Field -->
            <div class="input-field">
                <label for="registration">Aircraft Registration:</label>
                <input type="text" name="registration" id="registration" required placeholder="Enter registration">
            </div>

            <button type="submit" class="submit-btn">Upload</button>
        </form>

        <div id="statusMessage" class="status-message"></div>
    </div>

    <!-- JavaScript code -->
    <script>
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const fileNameDiv = document.getElementById('fileName');
        const statusMessageDiv = document.getElementById('statusMessage');
        const uploadForm = document.getElementById('uploadForm');

        let statusMessages = ["Graph creation started", "Processing nodes", "Still processing...", "Almost done..."];
        let statusIndex = 0;
        let statusInterval;

        uploadArea.addEventListener('click', () => fileInput.click());

        fileInput.addEventListener('change', () => {
            const file = fileInput.files[0];
            const fileName = file.name;
            fileNameDiv.textContent = `Selected file: ${fileName}`;
        });

        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragging');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('dragging');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragging');
            const files = e.dataTransfer.files;
            fileInput.files = files;
            const file = files[0];
            const fileName = file.name;
            fileNameDiv.textContent = `Selected file: ${fileName}`;
        });

        uploadForm.addEventListener('submit', (e) => {
            // Start updating status messages
            statusMessageDiv.textContent = statusMessages[statusIndex];
            statusIndex = (statusIndex + 1) % statusMessages.length;
            statusInterval = setInterval(() => {
                statusMessageDiv.textContent = statusMessages[statusIndex];
                statusIndex = (statusIndex + 1) % statusMessages.length;
            }, 5000); // Change message every 5 seconds
        });
    </script>

    <!-- Server-side rendering: if status is 'complete', show 'Graph creation complete' -->
    <% if (status === 'complete') { %>
        <script>
            // Stop the interval and update the status message
            if (typeof statusInterval !== 'undefined') {
                clearInterval(statusInterval);
            }
            document.getElementById('statusMessage').textContent = 'Graph creation complete';
        </script>
    <% } %>
</body>
</html>
